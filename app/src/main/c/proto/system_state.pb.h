// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: system_state.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_system_5fstate_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_system_5fstate_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_system_5fstate_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_system_5fstate_2eproto {
  static const uint32_t offsets[];
};
namespace trs_protos {
class NativeSystemState;
struct NativeSystemStateDefaultTypeInternal;
extern NativeSystemStateDefaultTypeInternal _NativeSystemState_default_instance_;
class NativeSystemState_MemoryRegion;
struct NativeSystemState_MemoryRegionDefaultTypeInternal;
extern NativeSystemState_MemoryRegionDefaultTypeInternal _NativeSystemState_MemoryRegion_default_instance_;
class NativeSystemState_Registers;
struct NativeSystemState_RegistersDefaultTypeInternal;
extern NativeSystemState_RegistersDefaultTypeInternal _NativeSystemState_Registers_default_instance_;
}  // namespace trs_protos
PROTOBUF_NAMESPACE_OPEN
template<> ::trs_protos::NativeSystemState* Arena::CreateMaybeMessage<::trs_protos::NativeSystemState>(Arena*);
template<> ::trs_protos::NativeSystemState_MemoryRegion* Arena::CreateMaybeMessage<::trs_protos::NativeSystemState_MemoryRegion>(Arena*);
template<> ::trs_protos::NativeSystemState_Registers* Arena::CreateMaybeMessage<::trs_protos::NativeSystemState_Registers>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace trs_protos {

enum Trs80Model : int {
  UNKNOWN_MODEL = 0,
  MODEL_I = 1,
  MODEL_III = 2,
  MODEL_4 = 3,
  MODEL_4P = 4,
  Trs80Model_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  Trs80Model_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool Trs80Model_IsValid(int value);
constexpr Trs80Model Trs80Model_MIN = UNKNOWN_MODEL;
constexpr Trs80Model Trs80Model_MAX = MODEL_4P;
constexpr int Trs80Model_ARRAYSIZE = Trs80Model_MAX + 1;

const std::string& Trs80Model_Name(Trs80Model value);
template<typename T>
inline const std::string& Trs80Model_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Trs80Model>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Trs80Model_Name.");
  return Trs80Model_Name(static_cast<Trs80Model>(enum_t_value));
}
bool Trs80Model_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Trs80Model* value);
// ===================================================================

class NativeSystemState_Registers final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:trs_protos.NativeSystemState.Registers) */ {
 public:
  inline NativeSystemState_Registers() : NativeSystemState_Registers(nullptr) {}
  ~NativeSystemState_Registers() override;
  explicit PROTOBUF_CONSTEXPR NativeSystemState_Registers(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NativeSystemState_Registers(const NativeSystemState_Registers& from);
  NativeSystemState_Registers(NativeSystemState_Registers&& from) noexcept
    : NativeSystemState_Registers() {
    *this = ::std::move(from);
  }

  inline NativeSystemState_Registers& operator=(const NativeSystemState_Registers& from) {
    CopyFrom(from);
    return *this;
  }
  inline NativeSystemState_Registers& operator=(NativeSystemState_Registers&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const NativeSystemState_Registers& default_instance() {
    return *internal_default_instance();
  }
  static inline const NativeSystemState_Registers* internal_default_instance() {
    return reinterpret_cast<const NativeSystemState_Registers*>(
               &_NativeSystemState_Registers_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(NativeSystemState_Registers& a, NativeSystemState_Registers& b) {
    a.Swap(&b);
  }
  inline void Swap(NativeSystemState_Registers* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NativeSystemState_Registers* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NativeSystemState_Registers* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NativeSystemState_Registers>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const NativeSystemState_Registers& from);
  void MergeFrom(const NativeSystemState_Registers& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NativeSystemState_Registers* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trs_protos.NativeSystemState.Registers";
  }
  protected:
  explicit NativeSystemState_Registers(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIxFieldNumber = 1,
    kIyFieldNumber = 2,
    kPcFieldNumber = 3,
    kSpFieldNumber = 4,
    kAfFieldNumber = 5,
    kBcFieldNumber = 6,
    kDeFieldNumber = 7,
    kHlFieldNumber = 8,
    kAfPrimeFieldNumber = 9,
    kBcPrimeFieldNumber = 10,
    kDePrimeFieldNumber = 11,
    kHlPrimeFieldNumber = 12,
    kIFieldNumber = 13,
    kR1FieldNumber = 14,
    kR2FieldNumber = 15,
  };
  // int32 ix = 1;
  void clear_ix();
  int32_t ix() const;
  void set_ix(int32_t value);
  private:
  int32_t _internal_ix() const;
  void _internal_set_ix(int32_t value);
  public:

  // int32 iy = 2;
  void clear_iy();
  int32_t iy() const;
  void set_iy(int32_t value);
  private:
  int32_t _internal_iy() const;
  void _internal_set_iy(int32_t value);
  public:

  // int32 pc = 3;
  void clear_pc();
  int32_t pc() const;
  void set_pc(int32_t value);
  private:
  int32_t _internal_pc() const;
  void _internal_set_pc(int32_t value);
  public:

  // int32 sp = 4;
  void clear_sp();
  int32_t sp() const;
  void set_sp(int32_t value);
  private:
  int32_t _internal_sp() const;
  void _internal_set_sp(int32_t value);
  public:

  // int32 af = 5;
  void clear_af();
  int32_t af() const;
  void set_af(int32_t value);
  private:
  int32_t _internal_af() const;
  void _internal_set_af(int32_t value);
  public:

  // int32 bc = 6;
  void clear_bc();
  int32_t bc() const;
  void set_bc(int32_t value);
  private:
  int32_t _internal_bc() const;
  void _internal_set_bc(int32_t value);
  public:

  // int32 de = 7;
  void clear_de();
  int32_t de() const;
  void set_de(int32_t value);
  private:
  int32_t _internal_de() const;
  void _internal_set_de(int32_t value);
  public:

  // int32 hl = 8;
  void clear_hl();
  int32_t hl() const;
  void set_hl(int32_t value);
  private:
  int32_t _internal_hl() const;
  void _internal_set_hl(int32_t value);
  public:

  // int32 af_prime = 9;
  void clear_af_prime();
  int32_t af_prime() const;
  void set_af_prime(int32_t value);
  private:
  int32_t _internal_af_prime() const;
  void _internal_set_af_prime(int32_t value);
  public:

  // int32 bc_prime = 10;
  void clear_bc_prime();
  int32_t bc_prime() const;
  void set_bc_prime(int32_t value);
  private:
  int32_t _internal_bc_prime() const;
  void _internal_set_bc_prime(int32_t value);
  public:

  // int32 de_prime = 11;
  void clear_de_prime();
  int32_t de_prime() const;
  void set_de_prime(int32_t value);
  private:
  int32_t _internal_de_prime() const;
  void _internal_set_de_prime(int32_t value);
  public:

  // int32 hl_prime = 12;
  void clear_hl_prime();
  int32_t hl_prime() const;
  void set_hl_prime(int32_t value);
  private:
  int32_t _internal_hl_prime() const;
  void _internal_set_hl_prime(int32_t value);
  public:

  // int32 i = 13;
  void clear_i();
  int32_t i() const;
  void set_i(int32_t value);
  private:
  int32_t _internal_i() const;
  void _internal_set_i(int32_t value);
  public:

  // int32 r_1 = 14;
  void clear_r_1();
  int32_t r_1() const;
  void set_r_1(int32_t value);
  private:
  int32_t _internal_r_1() const;
  void _internal_set_r_1(int32_t value);
  public:

  // int32 r_2 = 15;
  void clear_r_2();
  int32_t r_2() const;
  void set_r_2(int32_t value);
  private:
  int32_t _internal_r_2() const;
  void _internal_set_r_2(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:trs_protos.NativeSystemState.Registers)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t ix_;
    int32_t iy_;
    int32_t pc_;
    int32_t sp_;
    int32_t af_;
    int32_t bc_;
    int32_t de_;
    int32_t hl_;
    int32_t af_prime_;
    int32_t bc_prime_;
    int32_t de_prime_;
    int32_t hl_prime_;
    int32_t i_;
    int32_t r_1_;
    int32_t r_2_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_system_5fstate_2eproto;
};
// -------------------------------------------------------------------

class NativeSystemState_MemoryRegion final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:trs_protos.NativeSystemState.MemoryRegion) */ {
 public:
  inline NativeSystemState_MemoryRegion() : NativeSystemState_MemoryRegion(nullptr) {}
  ~NativeSystemState_MemoryRegion() override;
  explicit PROTOBUF_CONSTEXPR NativeSystemState_MemoryRegion(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NativeSystemState_MemoryRegion(const NativeSystemState_MemoryRegion& from);
  NativeSystemState_MemoryRegion(NativeSystemState_MemoryRegion&& from) noexcept
    : NativeSystemState_MemoryRegion() {
    *this = ::std::move(from);
  }

  inline NativeSystemState_MemoryRegion& operator=(const NativeSystemState_MemoryRegion& from) {
    CopyFrom(from);
    return *this;
  }
  inline NativeSystemState_MemoryRegion& operator=(NativeSystemState_MemoryRegion&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const NativeSystemState_MemoryRegion& default_instance() {
    return *internal_default_instance();
  }
  static inline const NativeSystemState_MemoryRegion* internal_default_instance() {
    return reinterpret_cast<const NativeSystemState_MemoryRegion*>(
               &_NativeSystemState_MemoryRegion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(NativeSystemState_MemoryRegion& a, NativeSystemState_MemoryRegion& b) {
    a.Swap(&b);
  }
  inline void Swap(NativeSystemState_MemoryRegion* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NativeSystemState_MemoryRegion* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NativeSystemState_MemoryRegion* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NativeSystemState_MemoryRegion>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const NativeSystemState_MemoryRegion& from);
  void MergeFrom(const NativeSystemState_MemoryRegion& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NativeSystemState_MemoryRegion* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trs_protos.NativeSystemState.MemoryRegion";
  }
  protected:
  explicit NativeSystemState_MemoryRegion(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2,
    kStartFieldNumber = 1,
  };
  // bytes data = 2;
  void clear_data();
  const std::string& data() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_data(ArgT0&& arg0, ArgT... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // int32 start = 1;
  void clear_start();
  int32_t start() const;
  void set_start(int32_t value);
  private:
  int32_t _internal_start() const;
  void _internal_set_start(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:trs_protos.NativeSystemState.MemoryRegion)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
    int32_t start_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_system_5fstate_2eproto;
};
// -------------------------------------------------------------------

class NativeSystemState final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:trs_protos.NativeSystemState) */ {
 public:
  inline NativeSystemState() : NativeSystemState(nullptr) {}
  ~NativeSystemState() override;
  explicit PROTOBUF_CONSTEXPR NativeSystemState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NativeSystemState(const NativeSystemState& from);
  NativeSystemState(NativeSystemState&& from) noexcept
    : NativeSystemState() {
    *this = ::std::move(from);
  }

  inline NativeSystemState& operator=(const NativeSystemState& from) {
    CopyFrom(from);
    return *this;
  }
  inline NativeSystemState& operator=(NativeSystemState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const NativeSystemState& default_instance() {
    return *internal_default_instance();
  }
  static inline const NativeSystemState* internal_default_instance() {
    return reinterpret_cast<const NativeSystemState*>(
               &_NativeSystemState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(NativeSystemState& a, NativeSystemState& b) {
    a.Swap(&b);
  }
  inline void Swap(NativeSystemState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NativeSystemState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NativeSystemState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NativeSystemState>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const NativeSystemState& from);
  void MergeFrom(const NativeSystemState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NativeSystemState* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trs_protos.NativeSystemState";
  }
  protected:
  explicit NativeSystemState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef NativeSystemState_Registers Registers;
  typedef NativeSystemState_MemoryRegion MemoryRegion;

  // accessors -------------------------------------------------------

  enum : int {
    kMemoryRegionsFieldNumber = 3,
    kRegistersFieldNumber = 2,
    kModelFieldNumber = 1,
  };
  // repeated .trs_protos.NativeSystemState.MemoryRegion memoryRegions = 3;
  int memoryregions_size() const;
  private:
  int _internal_memoryregions_size() const;
  public:
  void clear_memoryregions();
  ::trs_protos::NativeSystemState_MemoryRegion* mutable_memoryregions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trs_protos::NativeSystemState_MemoryRegion >*
      mutable_memoryregions();
  private:
  const ::trs_protos::NativeSystemState_MemoryRegion& _internal_memoryregions(int index) const;
  ::trs_protos::NativeSystemState_MemoryRegion* _internal_add_memoryregions();
  public:
  const ::trs_protos::NativeSystemState_MemoryRegion& memoryregions(int index) const;
  ::trs_protos::NativeSystemState_MemoryRegion* add_memoryregions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trs_protos::NativeSystemState_MemoryRegion >&
      memoryregions() const;

  // .trs_protos.NativeSystemState.Registers registers = 2;
  bool has_registers() const;
  private:
  bool _internal_has_registers() const;
  public:
  void clear_registers();
  const ::trs_protos::NativeSystemState_Registers& registers() const;
  PROTOBUF_NODISCARD ::trs_protos::NativeSystemState_Registers* release_registers();
  ::trs_protos::NativeSystemState_Registers* mutable_registers();
  void set_allocated_registers(::trs_protos::NativeSystemState_Registers* registers);
  private:
  const ::trs_protos::NativeSystemState_Registers& _internal_registers() const;
  ::trs_protos::NativeSystemState_Registers* _internal_mutable_registers();
  public:
  void unsafe_arena_set_allocated_registers(
      ::trs_protos::NativeSystemState_Registers* registers);
  ::trs_protos::NativeSystemState_Registers* unsafe_arena_release_registers();

  // .trs_protos.Trs80Model model = 1;
  void clear_model();
  ::trs_protos::Trs80Model model() const;
  void set_model(::trs_protos::Trs80Model value);
  private:
  ::trs_protos::Trs80Model _internal_model() const;
  void _internal_set_model(::trs_protos::Trs80Model value);
  public:

  // @@protoc_insertion_point(class_scope:trs_protos.NativeSystemState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trs_protos::NativeSystemState_MemoryRegion > memoryregions_;
    ::trs_protos::NativeSystemState_Registers* registers_;
    int model_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_system_5fstate_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NativeSystemState_Registers

// int32 ix = 1;
inline void NativeSystemState_Registers::clear_ix() {
  _impl_.ix_ = 0;
}
inline int32_t NativeSystemState_Registers::_internal_ix() const {
  return _impl_.ix_;
}
inline int32_t NativeSystemState_Registers::ix() const {
  // @@protoc_insertion_point(field_get:trs_protos.NativeSystemState.Registers.ix)
  return _internal_ix();
}
inline void NativeSystemState_Registers::_internal_set_ix(int32_t value) {
  
  _impl_.ix_ = value;
}
inline void NativeSystemState_Registers::set_ix(int32_t value) {
  _internal_set_ix(value);
  // @@protoc_insertion_point(field_set:trs_protos.NativeSystemState.Registers.ix)
}

// int32 iy = 2;
inline void NativeSystemState_Registers::clear_iy() {
  _impl_.iy_ = 0;
}
inline int32_t NativeSystemState_Registers::_internal_iy() const {
  return _impl_.iy_;
}
inline int32_t NativeSystemState_Registers::iy() const {
  // @@protoc_insertion_point(field_get:trs_protos.NativeSystemState.Registers.iy)
  return _internal_iy();
}
inline void NativeSystemState_Registers::_internal_set_iy(int32_t value) {
  
  _impl_.iy_ = value;
}
inline void NativeSystemState_Registers::set_iy(int32_t value) {
  _internal_set_iy(value);
  // @@protoc_insertion_point(field_set:trs_protos.NativeSystemState.Registers.iy)
}

// int32 pc = 3;
inline void NativeSystemState_Registers::clear_pc() {
  _impl_.pc_ = 0;
}
inline int32_t NativeSystemState_Registers::_internal_pc() const {
  return _impl_.pc_;
}
inline int32_t NativeSystemState_Registers::pc() const {
  // @@protoc_insertion_point(field_get:trs_protos.NativeSystemState.Registers.pc)
  return _internal_pc();
}
inline void NativeSystemState_Registers::_internal_set_pc(int32_t value) {
  
  _impl_.pc_ = value;
}
inline void NativeSystemState_Registers::set_pc(int32_t value) {
  _internal_set_pc(value);
  // @@protoc_insertion_point(field_set:trs_protos.NativeSystemState.Registers.pc)
}

// int32 sp = 4;
inline void NativeSystemState_Registers::clear_sp() {
  _impl_.sp_ = 0;
}
inline int32_t NativeSystemState_Registers::_internal_sp() const {
  return _impl_.sp_;
}
inline int32_t NativeSystemState_Registers::sp() const {
  // @@protoc_insertion_point(field_get:trs_protos.NativeSystemState.Registers.sp)
  return _internal_sp();
}
inline void NativeSystemState_Registers::_internal_set_sp(int32_t value) {
  
  _impl_.sp_ = value;
}
inline void NativeSystemState_Registers::set_sp(int32_t value) {
  _internal_set_sp(value);
  // @@protoc_insertion_point(field_set:trs_protos.NativeSystemState.Registers.sp)
}

// int32 af = 5;
inline void NativeSystemState_Registers::clear_af() {
  _impl_.af_ = 0;
}
inline int32_t NativeSystemState_Registers::_internal_af() const {
  return _impl_.af_;
}
inline int32_t NativeSystemState_Registers::af() const {
  // @@protoc_insertion_point(field_get:trs_protos.NativeSystemState.Registers.af)
  return _internal_af();
}
inline void NativeSystemState_Registers::_internal_set_af(int32_t value) {
  
  _impl_.af_ = value;
}
inline void NativeSystemState_Registers::set_af(int32_t value) {
  _internal_set_af(value);
  // @@protoc_insertion_point(field_set:trs_protos.NativeSystemState.Registers.af)
}

// int32 bc = 6;
inline void NativeSystemState_Registers::clear_bc() {
  _impl_.bc_ = 0;
}
inline int32_t NativeSystemState_Registers::_internal_bc() const {
  return _impl_.bc_;
}
inline int32_t NativeSystemState_Registers::bc() const {
  // @@protoc_insertion_point(field_get:trs_protos.NativeSystemState.Registers.bc)
  return _internal_bc();
}
inline void NativeSystemState_Registers::_internal_set_bc(int32_t value) {
  
  _impl_.bc_ = value;
}
inline void NativeSystemState_Registers::set_bc(int32_t value) {
  _internal_set_bc(value);
  // @@protoc_insertion_point(field_set:trs_protos.NativeSystemState.Registers.bc)
}

// int32 de = 7;
inline void NativeSystemState_Registers::clear_de() {
  _impl_.de_ = 0;
}
inline int32_t NativeSystemState_Registers::_internal_de() const {
  return _impl_.de_;
}
inline int32_t NativeSystemState_Registers::de() const {
  // @@protoc_insertion_point(field_get:trs_protos.NativeSystemState.Registers.de)
  return _internal_de();
}
inline void NativeSystemState_Registers::_internal_set_de(int32_t value) {
  
  _impl_.de_ = value;
}
inline void NativeSystemState_Registers::set_de(int32_t value) {
  _internal_set_de(value);
  // @@protoc_insertion_point(field_set:trs_protos.NativeSystemState.Registers.de)
}

// int32 hl = 8;
inline void NativeSystemState_Registers::clear_hl() {
  _impl_.hl_ = 0;
}
inline int32_t NativeSystemState_Registers::_internal_hl() const {
  return _impl_.hl_;
}
inline int32_t NativeSystemState_Registers::hl() const {
  // @@protoc_insertion_point(field_get:trs_protos.NativeSystemState.Registers.hl)
  return _internal_hl();
}
inline void NativeSystemState_Registers::_internal_set_hl(int32_t value) {
  
  _impl_.hl_ = value;
}
inline void NativeSystemState_Registers::set_hl(int32_t value) {
  _internal_set_hl(value);
  // @@protoc_insertion_point(field_set:trs_protos.NativeSystemState.Registers.hl)
}

// int32 af_prime = 9;
inline void NativeSystemState_Registers::clear_af_prime() {
  _impl_.af_prime_ = 0;
}
inline int32_t NativeSystemState_Registers::_internal_af_prime() const {
  return _impl_.af_prime_;
}
inline int32_t NativeSystemState_Registers::af_prime() const {
  // @@protoc_insertion_point(field_get:trs_protos.NativeSystemState.Registers.af_prime)
  return _internal_af_prime();
}
inline void NativeSystemState_Registers::_internal_set_af_prime(int32_t value) {
  
  _impl_.af_prime_ = value;
}
inline void NativeSystemState_Registers::set_af_prime(int32_t value) {
  _internal_set_af_prime(value);
  // @@protoc_insertion_point(field_set:trs_protos.NativeSystemState.Registers.af_prime)
}

// int32 bc_prime = 10;
inline void NativeSystemState_Registers::clear_bc_prime() {
  _impl_.bc_prime_ = 0;
}
inline int32_t NativeSystemState_Registers::_internal_bc_prime() const {
  return _impl_.bc_prime_;
}
inline int32_t NativeSystemState_Registers::bc_prime() const {
  // @@protoc_insertion_point(field_get:trs_protos.NativeSystemState.Registers.bc_prime)
  return _internal_bc_prime();
}
inline void NativeSystemState_Registers::_internal_set_bc_prime(int32_t value) {
  
  _impl_.bc_prime_ = value;
}
inline void NativeSystemState_Registers::set_bc_prime(int32_t value) {
  _internal_set_bc_prime(value);
  // @@protoc_insertion_point(field_set:trs_protos.NativeSystemState.Registers.bc_prime)
}

// int32 de_prime = 11;
inline void NativeSystemState_Registers::clear_de_prime() {
  _impl_.de_prime_ = 0;
}
inline int32_t NativeSystemState_Registers::_internal_de_prime() const {
  return _impl_.de_prime_;
}
inline int32_t NativeSystemState_Registers::de_prime() const {
  // @@protoc_insertion_point(field_get:trs_protos.NativeSystemState.Registers.de_prime)
  return _internal_de_prime();
}
inline void NativeSystemState_Registers::_internal_set_de_prime(int32_t value) {
  
  _impl_.de_prime_ = value;
}
inline void NativeSystemState_Registers::set_de_prime(int32_t value) {
  _internal_set_de_prime(value);
  // @@protoc_insertion_point(field_set:trs_protos.NativeSystemState.Registers.de_prime)
}

// int32 hl_prime = 12;
inline void NativeSystemState_Registers::clear_hl_prime() {
  _impl_.hl_prime_ = 0;
}
inline int32_t NativeSystemState_Registers::_internal_hl_prime() const {
  return _impl_.hl_prime_;
}
inline int32_t NativeSystemState_Registers::hl_prime() const {
  // @@protoc_insertion_point(field_get:trs_protos.NativeSystemState.Registers.hl_prime)
  return _internal_hl_prime();
}
inline void NativeSystemState_Registers::_internal_set_hl_prime(int32_t value) {
  
  _impl_.hl_prime_ = value;
}
inline void NativeSystemState_Registers::set_hl_prime(int32_t value) {
  _internal_set_hl_prime(value);
  // @@protoc_insertion_point(field_set:trs_protos.NativeSystemState.Registers.hl_prime)
}

// int32 i = 13;
inline void NativeSystemState_Registers::clear_i() {
  _impl_.i_ = 0;
}
inline int32_t NativeSystemState_Registers::_internal_i() const {
  return _impl_.i_;
}
inline int32_t NativeSystemState_Registers::i() const {
  // @@protoc_insertion_point(field_get:trs_protos.NativeSystemState.Registers.i)
  return _internal_i();
}
inline void NativeSystemState_Registers::_internal_set_i(int32_t value) {
  
  _impl_.i_ = value;
}
inline void NativeSystemState_Registers::set_i(int32_t value) {
  _internal_set_i(value);
  // @@protoc_insertion_point(field_set:trs_protos.NativeSystemState.Registers.i)
}

// int32 r_1 = 14;
inline void NativeSystemState_Registers::clear_r_1() {
  _impl_.r_1_ = 0;
}
inline int32_t NativeSystemState_Registers::_internal_r_1() const {
  return _impl_.r_1_;
}
inline int32_t NativeSystemState_Registers::r_1() const {
  // @@protoc_insertion_point(field_get:trs_protos.NativeSystemState.Registers.r_1)
  return _internal_r_1();
}
inline void NativeSystemState_Registers::_internal_set_r_1(int32_t value) {
  
  _impl_.r_1_ = value;
}
inline void NativeSystemState_Registers::set_r_1(int32_t value) {
  _internal_set_r_1(value);
  // @@protoc_insertion_point(field_set:trs_protos.NativeSystemState.Registers.r_1)
}

// int32 r_2 = 15;
inline void NativeSystemState_Registers::clear_r_2() {
  _impl_.r_2_ = 0;
}
inline int32_t NativeSystemState_Registers::_internal_r_2() const {
  return _impl_.r_2_;
}
inline int32_t NativeSystemState_Registers::r_2() const {
  // @@protoc_insertion_point(field_get:trs_protos.NativeSystemState.Registers.r_2)
  return _internal_r_2();
}
inline void NativeSystemState_Registers::_internal_set_r_2(int32_t value) {
  
  _impl_.r_2_ = value;
}
inline void NativeSystemState_Registers::set_r_2(int32_t value) {
  _internal_set_r_2(value);
  // @@protoc_insertion_point(field_set:trs_protos.NativeSystemState.Registers.r_2)
}

// -------------------------------------------------------------------

// NativeSystemState_MemoryRegion

// int32 start = 1;
inline void NativeSystemState_MemoryRegion::clear_start() {
  _impl_.start_ = 0;
}
inline int32_t NativeSystemState_MemoryRegion::_internal_start() const {
  return _impl_.start_;
}
inline int32_t NativeSystemState_MemoryRegion::start() const {
  // @@protoc_insertion_point(field_get:trs_protos.NativeSystemState.MemoryRegion.start)
  return _internal_start();
}
inline void NativeSystemState_MemoryRegion::_internal_set_start(int32_t value) {
  
  _impl_.start_ = value;
}
inline void NativeSystemState_MemoryRegion::set_start(int32_t value) {
  _internal_set_start(value);
  // @@protoc_insertion_point(field_set:trs_protos.NativeSystemState.MemoryRegion.start)
}

// bytes data = 2;
inline void NativeSystemState_MemoryRegion::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& NativeSystemState_MemoryRegion::data() const {
  // @@protoc_insertion_point(field_get:trs_protos.NativeSystemState.MemoryRegion.data)
  return _internal_data();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void NativeSystemState_MemoryRegion::set_data(ArgT0&& arg0, ArgT... args) {
 
 _impl_.data_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:trs_protos.NativeSystemState.MemoryRegion.data)
}
inline std::string* NativeSystemState_MemoryRegion::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:trs_protos.NativeSystemState.MemoryRegion.data)
  return _s;
}
inline const std::string& NativeSystemState_MemoryRegion::_internal_data() const {
  return _impl_.data_.Get();
}
inline void NativeSystemState_MemoryRegion::_internal_set_data(const std::string& value) {
  
  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* NativeSystemState_MemoryRegion::_internal_mutable_data() {
  
  return _impl_.data_.Mutable(GetArenaForAllocation());
}
inline std::string* NativeSystemState_MemoryRegion::release_data() {
  // @@protoc_insertion_point(field_release:trs_protos.NativeSystemState.MemoryRegion.data)
  return _impl_.data_.Release();
}
inline void NativeSystemState_MemoryRegion::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  _impl_.data_.SetAllocated(data, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:trs_protos.NativeSystemState.MemoryRegion.data)
}

// -------------------------------------------------------------------

// NativeSystemState

// .trs_protos.Trs80Model model = 1;
inline void NativeSystemState::clear_model() {
  _impl_.model_ = 0;
}
inline ::trs_protos::Trs80Model NativeSystemState::_internal_model() const {
  return static_cast< ::trs_protos::Trs80Model >(_impl_.model_);
}
inline ::trs_protos::Trs80Model NativeSystemState::model() const {
  // @@protoc_insertion_point(field_get:trs_protos.NativeSystemState.model)
  return _internal_model();
}
inline void NativeSystemState::_internal_set_model(::trs_protos::Trs80Model value) {
  
  _impl_.model_ = value;
}
inline void NativeSystemState::set_model(::trs_protos::Trs80Model value) {
  _internal_set_model(value);
  // @@protoc_insertion_point(field_set:trs_protos.NativeSystemState.model)
}

// .trs_protos.NativeSystemState.Registers registers = 2;
inline bool NativeSystemState::_internal_has_registers() const {
  return this != internal_default_instance() && _impl_.registers_ != nullptr;
}
inline bool NativeSystemState::has_registers() const {
  return _internal_has_registers();
}
inline void NativeSystemState::clear_registers() {
  if (GetArenaForAllocation() == nullptr && _impl_.registers_ != nullptr) {
    delete _impl_.registers_;
  }
  _impl_.registers_ = nullptr;
}
inline const ::trs_protos::NativeSystemState_Registers& NativeSystemState::_internal_registers() const {
  const ::trs_protos::NativeSystemState_Registers* p = _impl_.registers_;
  return p != nullptr ? *p : reinterpret_cast<const ::trs_protos::NativeSystemState_Registers&>(
      ::trs_protos::_NativeSystemState_Registers_default_instance_);
}
inline const ::trs_protos::NativeSystemState_Registers& NativeSystemState::registers() const {
  // @@protoc_insertion_point(field_get:trs_protos.NativeSystemState.registers)
  return _internal_registers();
}
inline void NativeSystemState::unsafe_arena_set_allocated_registers(
    ::trs_protos::NativeSystemState_Registers* registers) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.registers_);
  }
  _impl_.registers_ = registers;
  if (registers) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:trs_protos.NativeSystemState.registers)
}
inline ::trs_protos::NativeSystemState_Registers* NativeSystemState::release_registers() {
  
  ::trs_protos::NativeSystemState_Registers* temp = _impl_.registers_;
  _impl_.registers_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::trs_protos::NativeSystemState_Registers* NativeSystemState::unsafe_arena_release_registers() {
  // @@protoc_insertion_point(field_release:trs_protos.NativeSystemState.registers)
  
  ::trs_protos::NativeSystemState_Registers* temp = _impl_.registers_;
  _impl_.registers_ = nullptr;
  return temp;
}
inline ::trs_protos::NativeSystemState_Registers* NativeSystemState::_internal_mutable_registers() {
  
  if (_impl_.registers_ == nullptr) {
    auto* p = CreateMaybeMessage<::trs_protos::NativeSystemState_Registers>(GetArenaForAllocation());
    _impl_.registers_ = p;
  }
  return _impl_.registers_;
}
inline ::trs_protos::NativeSystemState_Registers* NativeSystemState::mutable_registers() {
  ::trs_protos::NativeSystemState_Registers* _msg = _internal_mutable_registers();
  // @@protoc_insertion_point(field_mutable:trs_protos.NativeSystemState.registers)
  return _msg;
}
inline void NativeSystemState::set_allocated_registers(::trs_protos::NativeSystemState_Registers* registers) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.registers_;
  }
  if (registers) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(registers);
    if (message_arena != submessage_arena) {
      registers = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, registers, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.registers_ = registers;
  // @@protoc_insertion_point(field_set_allocated:trs_protos.NativeSystemState.registers)
}

// repeated .trs_protos.NativeSystemState.MemoryRegion memoryRegions = 3;
inline int NativeSystemState::_internal_memoryregions_size() const {
  return _impl_.memoryregions_.size();
}
inline int NativeSystemState::memoryregions_size() const {
  return _internal_memoryregions_size();
}
inline void NativeSystemState::clear_memoryregions() {
  _impl_.memoryregions_.Clear();
}
inline ::trs_protos::NativeSystemState_MemoryRegion* NativeSystemState::mutable_memoryregions(int index) {
  // @@protoc_insertion_point(field_mutable:trs_protos.NativeSystemState.memoryRegions)
  return _impl_.memoryregions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trs_protos::NativeSystemState_MemoryRegion >*
NativeSystemState::mutable_memoryregions() {
  // @@protoc_insertion_point(field_mutable_list:trs_protos.NativeSystemState.memoryRegions)
  return &_impl_.memoryregions_;
}
inline const ::trs_protos::NativeSystemState_MemoryRegion& NativeSystemState::_internal_memoryregions(int index) const {
  return _impl_.memoryregions_.Get(index);
}
inline const ::trs_protos::NativeSystemState_MemoryRegion& NativeSystemState::memoryregions(int index) const {
  // @@protoc_insertion_point(field_get:trs_protos.NativeSystemState.memoryRegions)
  return _internal_memoryregions(index);
}
inline ::trs_protos::NativeSystemState_MemoryRegion* NativeSystemState::_internal_add_memoryregions() {
  return _impl_.memoryregions_.Add();
}
inline ::trs_protos::NativeSystemState_MemoryRegion* NativeSystemState::add_memoryregions() {
  ::trs_protos::NativeSystemState_MemoryRegion* _add = _internal_add_memoryregions();
  // @@protoc_insertion_point(field_add:trs_protos.NativeSystemState.memoryRegions)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trs_protos::NativeSystemState_MemoryRegion >&
NativeSystemState::memoryregions() const {
  // @@protoc_insertion_point(field_list:trs_protos.NativeSystemState.memoryRegions)
  return _impl_.memoryregions_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace trs_protos

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::trs_protos::Trs80Model> : ::std::true_type {};

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_system_5fstate_2eproto
