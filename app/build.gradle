buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"

    defaultConfig {
        applicationId "org.puder.trs80"
        minSdkVersion 15
        targetSdkVersion 22

        ndk {
            moduleName "xtrs"
        }
    }

    sourceSets.main {
        jni.srcDirs = [] //disable automatic ndk-build call
        //jni.srcDirs = ['src/main/jni']
        jniLibs.srcDir 'src/main/libs'
    }

    sourceSets {
        main {
            java {
                exclude '**/ConfigurationUtil.java'
            }
        }
    }

    buildTypes {
        debug {
            resValue "bool", "debug", "true"
        }
        release {
            resValue "bool", "debug", "false"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
        def ndkDir = android.ndkDirectory
        commandLine "$ndkDir/ndk-build",
                '-C', file('src/main/jni').absolutePath,
                '-j', Runtime.runtime.availableProcessors(),
                'all',
                'NDK_DEBUG=1'
    }

    task cleanNative(type: Exec, description: 'Clean JNI object files') {
        def ndkDir = android.ndkDirectory
        commandLine "$ndkDir/ndk-build",
                '-C', file('src/main/jni').absolutePath,
                'clean'
    }

    clean.dependsOn 'cleanNative'

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn buildNative
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'NOTICE'
        exclude 'META-INF/ASL2.0'
    }

    dependencies {
        repositories {
            mavenCentral()
        }
        //compile project (':tools:tpk')
        compile 'com.android.support:design:24.2.1'
        compile 'com.android.support:appcompat-v7:24.2.1'
        compile 'com.android.support:mediarouter-v7:24.2.1'
        compile 'com.android.support:recyclerview-v7:24.2.1'
        compile 'com.google.android.gms:play-services-cast:+'
        compile 'commons-io:commons-io:2.4'
        compile 'org.simpleframework:simple-http:6.+'
        compile('com.crashlytics.sdk.android:crashlytics:2.6.4@aar') {
            transitive = true;
        }
        compile('com.crashlytics.sdk.android:crashlytics-ndk:1.1.5@aar') {
            transitive = true;
        }
    }
}

crashlytics {
    enableNdk true
    androidNdkOut 'src/main/obj'
    androidNdkLibsOut 'src/main/libs'
}
